@model MVC.Models.Bookmark.CreateEditBookmarkViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Bookmark</h2>


@using (Html.BeginForm("CreateConfirmed", "Bookmark", FormMethod.Post, new { @class = "create-bookmark-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CategoryId,Model.Categories)
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Create new category</button>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New Category</h4>
            </div>
            <div class="modal-body">
                <p>Category Name: </p>
                <input type="text" id="categoryNameInputField"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-default" id="addNewCategory">Create</button>
            </div>
        </div>

    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@*THIS SHOULD GO TO A SEPARATE SCRIPT file and the script should be included here, or in bundle*@
<script>
    $('#addNewCategory').on('click', function () {
          $.ajax({
            url: "@Url.Action("CreateCategoryAsync", "Categories")",
            type: "POST",
              data: {
                  categoryName: $('#categoryNameInputField').val() },
              success: function (data) {
                  debugger;
                if (data != "error") {
                    debugger;
                    $('#CategoryId').append($('<option/>', {
                        value: data.ID,
                        text: data.Name
                    }));

                    $('#CategoryId option[value="'+ data.ID +'"]').attr("selected", "selected");
                    $('#myModal').modal("hide");
                }
            },
            error: function (data) {

            }
        });



    })
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
